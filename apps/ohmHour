/**
 *  Ohm Hour
 *
 *  Copyright 2015 Mark West
 *  Version 1.0 8/8/15
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Ohmconnect",
    namespace: "afewremarks",
    author: "Mark West",
    description: "Integration into ohm connect to turn off plugs/switches and dim lights during peak energy events",
    category: "",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png",
    iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png")


preferences {

	page(name: "getPref")
    
}

def getPref() {    
    dynamicPage(name: "getPref", title: "Enter your OhmConnect ID", install:true, uninstall: true) {
	section("Configure your Ohmconnect 8 digit ID (end of the URL at the bottom of the account page)") {
        input "ohmID", "text", title: "Ohm Connect ID", required: true
    }
   
    def phrases = location.helloHome?.getPhrases()*.label
		if (phrases) {
        	phrases.sort()
			section("Perform which phrase when...") {
				log.trace phrases
				input "phrase_start", "enum", title: "Ohm Hour starts", required: true, options: phrases
				input "phrase_end", "enum", title: "Ohm Hour stops", required: true, options: phrases
			}
		}
		section([mobileOnly:true], "Options") {
			label(title: "Assign a name", required: false)
            mode title: "Set for specific mode(s)", required: false
            href "pageAbout", title: "About ${textAppName()}", description: "Tap to get application version,  license and instructions"
		}
    }
}

page(name: "pageAbout", title: "About ${textAppName()}") {
        section {
            paragraph "${textVersion()}\n${textCopyright()}\n\n${textLicense()}\n"
        }
        section("Instructions") {
            paragraph textHelp()
        }
}

def installed() {
	log.debug "Installed with settings: ${settings}"
	initialize()
}

def updated() {
	log.debug "Updated with settings: ${settings}"

	unsubscribe()
	initialize()
}

def initialize() {
	// TODO: subscribe to attributes, devices, locations, etc.
    runEvery5Minutes(updateOhmHourStatus)
}

def updateOhmHourStatus() {
	def params = [
        uri:  'https://login.ohmconnect.com/verify-ohm-hour/',
        path: ohmID,
    ]
    try {
    httpGet(params) { resp ->
    //    resp.headers.each {
    //       log.debug "${it.name} : ${it.value}"
    //    }
       
       if(resp.data.active == "True"){
       log.debug "Ohm Hour"
       
       location.helloHome.execute(settings.phrase_start)
       
       def delay = (60 * 5)+30
		runIn(delay,endOhmHour )
       }else{
       	log.debug "Not currently an Ohm Hour"
       }
    }
} catch (e) {
    log.error "something went wrong: $e"
}

}

def endOhmHour() {

	location.helloHome.execute(settings.phrase_end)

}

//Version/Copyright/Information/Help

private def textAppName() {
	def text = "Ohm Connect - Ohm Hour"
}	

private def textVersion() {
    def text = "Version 1.0 (8/8/15)"
}

private def textCopyright() {
    def text = "Copyright Â© 2015 Mark West"
}

private def textLicense() {
    def text =
		"Licensed under the Apache License, Version 2.0 (the 'License'); "+
		"you may not use this file except in compliance with the License. "+
		"You may obtain a copy of the License at"+
		"\n\n"+
		"    http://www.apache.org/licenses/LICENSE-2.0"+
		"\n\n"+
		"Unless required by applicable law or agreed to in writing, software "+
		"distributed under the License is distributed on an 'AS IS' BASIS, "+
		"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. "+
		"See the License for the specific language governing permissions and "+
		"limitations under the License."
}

private def textHelp() {
	def text =
    	"Ohm Connect is a service that notifies you during peak power grid demand so you can reduce your consumption.(referal link: ohmc.co/ccedf6)"+
		"This app pings the Ohm Connect server every 5 mins to see if there is an Ohm Hour Event. "+
		"When there is it will run a Hello, Home phrase to help reduce your power use. After the Ohm Hour ends it will run an additional Hello, home phrase." 
}

